.tournament-logo {
    display: block;

    .logo-container {
        display: block;
        margin-bottom: 30px;
        width: 80px;
        height: 80px;

        img {
            object-fit: contain;
            object-position: center;
            width: 100%;
            height: 100%;
        }

        &.is-left {
            margin-right: auto;
        }

        &.is-right {
            margin-left: auto;
        }

        &.is-center {
            margin-left: auto;
            margin-right: auto;
        }
    }
}

.selection-area {
    .selection-desc {
        p {
            text-align: center;
        }
    }

    .selection-box {}

    .selection-preview-link {
        position: relative;
        width: 500px;
        display: block;
        margin: 20px auto;

        .link-label {
            text-align: center;
            color: $muted;
            font-weight: $font-weight-bold;
        }

        .link-input-group {
            display: flex;
            flex-wrap: wrap;
            align-items: stretch;
            width: 100%;

            >.link-form-control,
            >.link-form-control-plaintext {
                position: relative; // For focus state's z-index
                flex: 1 1 0%;
                min-width: 0; // https://stackoverflow.com/questions/36247140/why-dont-flex-items-shrink-past-content-size
                margin-bottom: 0;

                +.link-form-control {
                    margin-left: -$input-border-width;
                }
            }

            // Bring the "active" form control to the top of surrounding elements
            >.link-form-control:focus {
                z-index: 3;
            }

            >.link-form-control {
                &:not(:last-child) {
                    @include border-right-radius(0);
                }

                &:not(:first-child) {
                    @include border-left-radius(0);
                }
            }

            .link-form-control {
                display: block;
                width: 100%;
                height: 44px;
                padding: $input-padding-y $input-padding-x;
                padding-right: $input-padding-x*2;
                font-family: $input-font-family;
                @include font-size($input-font-size);
                font-weight: $input-font-weight;
                line-height: $input-line-height;
                color: $input-color;
                background-color: $input-bg;
                background-clip: padding-box;
                border: $input-border-width solid transparent;

                // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
                border-radius: 2rem;

                @include box-shadow($input-box-shadow);
                @include transition($input-transition);

                // Unstyle the caret on `<select>`s in IE10+.
                &::-ms-expand {
                    background-color: transparent;
                    border: 0;
                }

                // Remove select outline from select box in FF
                &:-moz-focusring {
                    color: transparent;
                    text-shadow: 0 0 0 $input-color;
                }

                // Customize the `:focus` state to imitate native WebKit styles.
                @include form-control-focus($ignore-warning: true);

                &:focus {
                    box-shadow: none;
                }

                // Placeholder
                &::placeholder {
                    color: $input-placeholder-color;
                    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
                    opacity: 1;
                }

                // Disabled and read-only inputs
                //
                // HTML5 says that controls under a fieldset > legend:first-child won't be
                // disabled if the fieldset is disabled. Due to implementation difficulty, we
                // don't honor that edge case; we style them as disabled anyway.
                &:disabled,
                &[readonly] {
                    background-color: $input-disabled-bg;
                    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
                    opacity: 1;
                }

                &[readonly] {
                    color: $muted;
                }
            }

            .link-input-group-append,
            .link-input-group-prepend {
                display: flex;

                .btn {
                    position: relative;
                    z-index: 4;

                    &:focus {
                        z-index: 4;
                    }
                }

                .btn+.btn,
                .btn+.input-group-text,
                .input-group-text+.input-group-text,
                .input-group-text+.btn {
                    margin-left: -$input-border-width;
                }
            }

            .link-input-group-prepend {
                margin-right: -2rem;
            }

            .link-input-group-append {
                margin-left: -2rem;
            }
        }
    }

    .selection-btn {
        text-align: center;
    }
}
